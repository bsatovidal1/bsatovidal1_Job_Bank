// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using bsatovidal1_Job_Bank.Data;

namespace bsatovidal1_Job_Bank.Data.JBMigrations
{
    [DbContext(typeof(JobbBankContext))]
    [Migration("20201202224519_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("JB")
                .HasAnnotation("ProductVersion", "3.1.9");

            modelBuilder.Entity("bsatovidal1_Job_Bank.Models.Applicant", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(255);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<string>("MiddleName")
                        .HasColumnType("TEXT")
                        .HasMaxLength(30);

                    b.Property<long>("Phone")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("RetrainingProgramID")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("BLOB");

                    b.Property<string>("SIN")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(9);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("TEXT")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasName("IX_Unique_Applicant_email");

                    b.HasIndex("RetrainingProgramID");

                    b.ToTable("Applicants");
                });

            modelBuilder.Entity("bsatovidal1_Job_Bank.Models.ApplicantSkill", b =>
                {
                    b.Property<int>("ApplicantID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SkillID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ApplicantID", "SkillID");

                    b.HasIndex("SkillID");

                    b.ToTable("ApplicantSkills");
                });

            modelBuilder.Entity("bsatovidal1_Job_Bank.Models.Application", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ApplicantID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(2000);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<int>("PostingID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("TEXT")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("PostingID");

                    b.HasIndex("ApplicantID", "PostingID")
                        .IsUnique()
                        .HasName("IX_Unique_Application");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("bsatovidal1_Job_Bank.Models.FileContent", b =>
                {
                    b.Property<int>("FileContentID")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Content")
                        .HasColumnType("BLOB");

                    b.HasKey("FileContentID");

                    b.ToTable("FileContent");
                });

            modelBuilder.Entity("bsatovidal1_Job_Bank.Models.Occupation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("TEXT")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Occupations");
                });

            modelBuilder.Entity("bsatovidal1_Job_Bank.Models.PhotoContent", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Content")
                        .HasColumnType("BLOB");

                    b.Property<string>("MimeType")
                        .HasColumnType("TEXT")
                        .HasMaxLength(255);

                    b.Property<int?>("PhotoFullId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PhotoThumbId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("PhotoFullId")
                        .IsUnique();

                    b.HasIndex("PhotoThumbId")
                        .IsUnique();

                    b.ToTable("PhotoContent");
                });

            modelBuilder.Entity("bsatovidal1_Job_Bank.Models.Position", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(511);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(255);

                    b.Property<int>("OccupationID")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(9,2)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("TEXT")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("OccupationID");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("bsatovidal1_Job_Bank.Models.PositionSkill", b =>
                {
                    b.Property<int>("PositionID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SkillID")
                        .HasColumnType("INTEGER");

                    b.HasKey("PositionID", "SkillID");

                    b.HasIndex("SkillID");

                    b.ToTable("PositionSkills");
                });

            modelBuilder.Entity("bsatovidal1_Job_Bank.Models.Posting", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ClosingDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<int>("NumberOpen")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PositionID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("TEXT")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("PositionID", "ClosingDate")
                        .IsUnique();

                    b.ToTable("Postings");
                });

            modelBuilder.Entity("bsatovidal1_Job_Bank.Models.RetrainingProgram", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(70);

                    b.HasKey("ID");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("RetrainingPrograms");
                });

            modelBuilder.Entity("bsatovidal1_Job_Bank.Models.Skill", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("bsatovidal1_Job_Bank.Models.UploadedFile", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FileName")
                        .HasColumnType("TEXT")
                        .HasMaxLength(255);

                    b.Property<string>("MimeType")
                        .HasColumnType("TEXT")
                        .HasMaxLength(255);

                    b.HasKey("ID");

                    b.ToTable("UploadedFiles");

                    b.HasDiscriminator<string>("Discriminator").HasValue("UploadedFile");
                });

            modelBuilder.Entity("bsatovidal1_Job_Bank.Models.UploadedPhoto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FileName")
                        .HasColumnType("TEXT")
                        .HasMaxLength(255);

                    b.HasKey("ID");

                    b.ToTable("UploadedPhotos");

                    b.HasDiscriminator<string>("Discriminator").HasValue("UploadedPhoto");
                });

            modelBuilder.Entity("bsatovidal1_Job_Bank.Models.ApplicantFile", b =>
                {
                    b.HasBaseType("bsatovidal1_Job_Bank.Models.UploadedFile");

                    b.Property<int>("ApplicantID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasMaxLength(255);

                    b.HasIndex("ApplicantID");

                    b.HasDiscriminator().HasValue("ApplicantFile");
                });

            modelBuilder.Entity("bsatovidal1_Job_Bank.Models.PostingFile", b =>
                {
                    b.HasBaseType("bsatovidal1_Job_Bank.Models.UploadedFile");

                    b.Property<string>("Description")
                        .HasColumnName("PostingFile_Description")
                        .HasColumnType("TEXT")
                        .HasMaxLength(255);

                    b.Property<int>("PostingID")
                        .HasColumnType("INTEGER");

                    b.HasIndex("PostingID");

                    b.HasDiscriminator().HasValue("PostingFile");
                });

            modelBuilder.Entity("bsatovidal1_Job_Bank.Models.ApplicantPhoto", b =>
                {
                    b.HasBaseType("bsatovidal1_Job_Bank.Models.UploadedPhoto");

                    b.Property<int>("ApplicantID")
                        .HasColumnType("INTEGER");

                    b.HasIndex("ApplicantID")
                        .IsUnique();

                    b.HasDiscriminator().HasValue("ApplicantPhoto");
                });

            modelBuilder.Entity("bsatovidal1_Job_Bank.Models.Applicant", b =>
                {
                    b.HasOne("bsatovidal1_Job_Bank.Models.RetrainingProgram", "RetrainingPrograms")
                        .WithMany("Applicants")
                        .HasForeignKey("RetrainingProgramID");
                });

            modelBuilder.Entity("bsatovidal1_Job_Bank.Models.ApplicantSkill", b =>
                {
                    b.HasOne("bsatovidal1_Job_Bank.Models.Applicant", "Applicant")
                        .WithMany("ApplicantSkills")
                        .HasForeignKey("ApplicantID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bsatovidal1_Job_Bank.Models.Skill", "Skill")
                        .WithMany("ApplicantSkills")
                        .HasForeignKey("SkillID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("bsatovidal1_Job_Bank.Models.Application", b =>
                {
                    b.HasOne("bsatovidal1_Job_Bank.Models.Applicant", "Applicant")
                        .WithMany("Applications")
                        .HasForeignKey("ApplicantID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bsatovidal1_Job_Bank.Models.Posting", "Posting")
                        .WithMany("Applications")
                        .HasForeignKey("PostingID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("bsatovidal1_Job_Bank.Models.FileContent", b =>
                {
                    b.HasOne("bsatovidal1_Job_Bank.Models.UploadedFile", "UploadedFile")
                        .WithOne("FileContent")
                        .HasForeignKey("bsatovidal1_Job_Bank.Models.FileContent", "FileContentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("bsatovidal1_Job_Bank.Models.PhotoContent", b =>
                {
                    b.HasOne("bsatovidal1_Job_Bank.Models.UploadedPhoto", "PhotoFull")
                        .WithOne("PhotoContentFull")
                        .HasForeignKey("bsatovidal1_Job_Bank.Models.PhotoContent", "PhotoFullId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("bsatovidal1_Job_Bank.Models.UploadedPhoto", "PhotoThumb")
                        .WithOne("PhotoContentThumb")
                        .HasForeignKey("bsatovidal1_Job_Bank.Models.PhotoContent", "PhotoThumbId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("bsatovidal1_Job_Bank.Models.Position", b =>
                {
                    b.HasOne("bsatovidal1_Job_Bank.Models.Occupation", "Occupation")
                        .WithMany("Positions")
                        .HasForeignKey("OccupationID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("bsatovidal1_Job_Bank.Models.PositionSkill", b =>
                {
                    b.HasOne("bsatovidal1_Job_Bank.Models.Position", "Position")
                        .WithMany("PositionSkills")
                        .HasForeignKey("PositionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bsatovidal1_Job_Bank.Models.Skill", "Skill")
                        .WithMany("PositionSkills")
                        .HasForeignKey("SkillID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("bsatovidal1_Job_Bank.Models.Posting", b =>
                {
                    b.HasOne("bsatovidal1_Job_Bank.Models.Position", "Position")
                        .WithMany("Postings")
                        .HasForeignKey("PositionID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("bsatovidal1_Job_Bank.Models.ApplicantFile", b =>
                {
                    b.HasOne("bsatovidal1_Job_Bank.Models.Posting", "Applicant")
                        .WithMany()
                        .HasForeignKey("ApplicantID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("bsatovidal1_Job_Bank.Models.PostingFile", b =>
                {
                    b.HasOne("bsatovidal1_Job_Bank.Models.Posting", "Posting")
                        .WithMany("PostingFiles")
                        .HasForeignKey("PostingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("bsatovidal1_Job_Bank.Models.ApplicantPhoto", b =>
                {
                    b.HasOne("bsatovidal1_Job_Bank.Models.Applicant", "Applicant")
                        .WithOne("ApplicantPhoto")
                        .HasForeignKey("bsatovidal1_Job_Bank.Models.ApplicantPhoto", "ApplicantID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
